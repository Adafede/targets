% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class_active.R
\name{active_class}
\alias{active_class}
\title{Abstract class for active algorithm objects.}
\description{
Not a user-side R6 class.
Used to build external HPC scheduling algorithms.
}
\keyword{internal}
\section{Super class}{
\code{\link[targets:tar_algorithm]{targets::tar_algorithm}} -> \code{tar_active}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{pipeline}}{Pipeline object.}

\item{\code{meta}}{Meta object.}

\item{\code{scheduler}}{Scheduler object.}

\item{\code{names}}{Character, names of targets.}

\item{\code{queue}}{Character, name of the queue type.}

\item{\code{reporter}}{Character, name of the reporter.}

\item{\code{garbage_collection}}{Logical, whether to
periodically run garbage collection.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{active_class$new()}}
\item \href{#method-ensure_meta}{\code{active_class$ensure_meta()}}
\item \href{#method-run_gc}{\code{active_class$run_gc()}}
\item \href{#method-unload_transient}{\code{active_class$unload_transient()}}
\item \href{#method-unserialize_target}{\code{active_class$unserialize_target()}}
\item \href{#method-start}{\code{active_class$start()}}
\item \href{#method-end}{\code{active_class$end()}}
\item \href{#method-validate}{\code{active_class$validate()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="targets" data-topic="tar_algorithm" data-id="update_scheduler">}\href{../../targets/html/tar_algorithm.html#method-update_scheduler}{\code{targets::tar_algorithm$update_scheduler()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialize an active algorithm object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{active_class$new(
  pipeline = NULL,
  meta = NULL,
  names = NULL,
  queue = NULL,
  reporter = NULL,
  garbage_collection = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{pipeline}}{Pipeline object.}

\item{\code{meta}}{Meta object.}

\item{\code{names}}{Character, names of targets.}

\item{\code{queue}}{Character, type of queue.}

\item{\code{reporter}}{Character, type of reporter.}

\item{\code{garbage_collection}}{Logical, whether to
periodically run garbage collection.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ensure_meta"></a>}}
\if{latex}{\out{\hypertarget{method-ensure_meta}{}}}
\subsection{Method \code{ensure_meta()}}{
Ensure metadata is pre-processed
and up to date in memory.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{active_class$ensure_meta()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-run_gc"></a>}}
\if{latex}{\out{\hypertarget{method-run_gc}{}}}
\subsection{Method \code{run_gc()}}{
Run garbage collection if enabled.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{active_class$run_gc()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-unload_transient"></a>}}
\if{latex}{\out{\hypertarget{method-unload_transient}{}}}
\subsection{Method \code{unload_transient()}}{
Unload transient-memory targets.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{active_class$unload_transient()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-unserialize_target"></a>}}
\if{latex}{\out{\hypertarget{method-unserialize_target}{}}}
\subsection{Method \code{unserialize_target()}}{
Unserialize a target.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{active_class$unserialize_target(target)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{target}}{Target object.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-start"></a>}}
\if{latex}{\out{\hypertarget{method-start}{}}}
\subsection{Method \code{start()}}{
Start the algorithm.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{active_class$start()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-end"></a>}}
\if{latex}{\out{\hypertarget{method-end}{}}}
\subsection{Method \code{end()}}{
End the algorithm.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{active_class$end()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-validate"></a>}}
\if{latex}{\out{\hypertarget{method-validate}{}}}
\subsection{Method \code{validate()}}{
Validate the algorithm.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{active_class$validate()}\if{html}{\out{</div>}}
}

}
}
