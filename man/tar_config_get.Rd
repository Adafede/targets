% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tar_config_get.R
\name{tar_config_get}
\alias{tar_config_get}
\title{Get configuration settings from _targets.yaml.}
\usage{
tar_config_get(name, config = Sys.getenv("TAR_CONFIG", "_targets.yaml"))
}
\arguments{
\item{name}{Character of length 1, name of the specific
configuration setting to retrieve.}

\item{config}{Character of length 1, file path of the YAML
configuration file with \code{targets} project settings.
The \code{config} argument specifies which YAML configuration
file that \code{tar_config_get()} reads from or \code{tar_config_set()}
writes to in a single function call.
It does not globally change which configuration file is used
in subsequent function calls. The default file path of the YAML
file is always \verb{_targets.yaml} unless you set another
default path using the \code{TAR_CONFIG} environment variable,
e.g. \verb{Sys.setenv(TAR_CONFIG = "custom.yaml)}.
But please keep in mind that unless you set
\code{TAR_CONFIG} permanently inside your \code{.Renviron} file, the
environment variable will reset when your R session restarts.
Please check \code{Sys.getenv("TAR_CONFIG")} to be sure.}
}
\value{
The value of the configuration setting from
the YAML configuration file (default: \verb{_targets.yaml})
or the default value if the setting is not available.
The data type of the return value depends on your choice
of \code{name}.
}
\description{
Read the custom settings in the optional _targets.yaml
configuration file at the current project.
}
\details{
Each project can have an optional YAML configuration file
(default: \verb{_targets.yaml}) with settings specific to a given project.
You can write it by hand or modify it with \code{\link[=tar_config_set]{tar_config_set()}}.
The currently supported configuration settings are
documented as the arguments of \code{\link[=tar_config_set]{tar_config_set()}}.
}
\section{TAR_CONFIG}{

The \code{TAR_CONFIG} environment variable controls the file path to the
optional YAML configuration file with project settings.
If you do not set \code{TAR_CONFIG}, the default YAML file path is
\verb{_targets.yaml}. The YAML file controls the default values of various
arguments to functions like \code{\link[=tar_make]{tar_make()}}. Settings include
the file path of the target script (default: \verb{_targets.R})
and the directory path of the data store (default: \verb{_targets/}).
To modify the or access
the configuration settings programmatically,
use recommended functions \code{\link[=tar_config_set]{tar_config_set()}} and \code{\link[=tar_config_get]{tar_config_get()}}.
These functions are preferred over modifying the YAML file by hand
because they have documentation and guardrails to ensure correctness.
}

\examples{
if (identical(Sys.getenv("TAR_EXAMPLES"), "true")) {
tar_dir({ # tar_dir() runs code from a temporary directory.
tar_script(list(tar_target(x, 1 + 1)))
tar_config_get("store") # "_targets"
store_path <- tempfile()
tar_config_set(store = store_path)
tar_config_get("store") # Shows a temp file.
tar_make() # Writes to the custom data store identified in _targets.yaml.
tar_read(x) # tar_read() knows about _targets.yaml too.
file.exists("_targets") # FALSE
file.exists(store_path) # TRUE
})
}
}
\seealso{
Other configuration: 
\code{\link{tar_config_set}()},
\code{\link{tar_envvars}()},
\code{\link{tar_option_get}()},
\code{\link{tar_option_reset}()},
\code{\link{tar_option_set}()}
}
\concept{configuration}
