% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tar_path.R
\name{tar_path}
\alias{tar_path}
\title{Get the file path of a target's stored value.}
\usage{
tar_path(name = NULL, default = tempfile())
}
\arguments{
\item{name}{Symbol, name of the target.
If \code{NULL}, \code{tar_path()} returns the path of the target currently running
in a pipeline.}

\item{default}{Character, value to return if \code{tar_path()}
is called on its own outside a \code{targets} pipeline.
Having a default lets users run things without \code{\link[=tar_make]{tar_make()}},
which helps peel back layers of code and troubleshoot bugs.}
}
\value{
Character, file path to the target.
}
\description{
Get the file path of a target's stored value. Could be the
target currently running in a pipeline or a target of your choice.
}
\details{
Call \code{tar_path(name = "your_target")} to get the file path
of a selected target. Inside the command of a target, call
\code{tar_path()} with no arguments to get the path to the target
currently running. (Does not apply to dynamic files
(\code{format = "file"}) because those paths are not known in advance.)
If you call \code{tar_path()} outside a pipeline without specifying \code{name},
the return value is \code{default}.
}
\examples{
tar_path()
tar_path(your_target)
if (identical(Sys.getenv("TARGETS_LONG_EXAMPLES"), "true")) {
tar_dir({
tar_script(tar_target(returns_path, tar_path()))
tar_make()
tar_read(returns_path)
})
}
}
